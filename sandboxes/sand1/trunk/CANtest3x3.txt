# CANtestx3.txt
# 06/01/2024
# 3x3 test
#
# General multi-connection bridging file
# 
# Bridge/filter usage:
# 1) hub-server-bridge 
#  Command line determines connection numbering--
#  1 = listening port (grouped as one connection)
#  2 = 1st command line client connection
#  3 = 2nd command line client connection
#  ...
#  n = nth command line client connection
#
#  note: internally hub-server would number these 0 - (n-1)
#
#  The order and associated meaning of the client connections
#  is determined by startup script used with the command line.
#  The listening port would always be #1 (internally 0).
#  
# 2) can-server bridge--
#  ./can-client -f <path/file>
#  1 = 1st CAN0
#  2 = 2nd CAN1
#  (Therefore, a 2x2 table matrix)
#
# 3) emc-master requires three inputs (for now)
#  1 = system CAN bus
#  2 = emc-local1 CAN bus
#  3 = emc-local2 CAN bus
#   Note: emc-master could be implemented by: 
#   - Raspberry Pi (CAN hat + gateway/serial)
#   - bmsmot (two CAN + uart-uart)
#   - STM32G474 (three CAN)
#   - Additional local buses could be accommodated
#     with gateway/serial, multiple CAN hats, etc.
#
# File on command line is opened and-- 
#  - read and edited for logical errors
#  - size of arrays and tables determined
#  - memory allocated for arrays and tables
#  - tables stored in sorted order based on input CAN ID
#
# hub-server-bridge command line example 3x3 filtering--
#  hub-server --nodelay --file <path/file> \
#  <listening host> <listening port> \
# 	<client host #1> <client port #1> \
# 	<client host #2> <client port #2> 
#
# Which MIGHT BE(!) implemented with this command line--
# socat TCP4-LISTEN:32125,nodelay FILE:/dev/ttyUSB0,b2000000,raw,echo=0,crtscts=0 & 
# hub-server-bridge --nodelay --file CANbridge3x3.txt \
#   0.0.0.0 32123 localhost 32124 localhost 32125 &
#
# Where--assignments of connections would be:
#    Table input 0: listening port: all others send/receive same filtering
#    Table input 1: client port #1 connects to forwarded port to remote machine
#    Table input 2: client port #2 connects to serial port/ttyUSB
# 
# Number of tables: square matrix: n*n (MATRIXMAX = 4)
# Example: 3x3
#          Col 1  Col 2  Col 3
#   Row 1    x      a      b
#   Row 2    c      x      d
#   Row 3    e      f      x
# Where:
#   x - input does not copy to output (no send to self)
#       code = -1;
#   a-f - code type for converting in->out
# 	  code = 0 PASS-ON-MATCH: pass in->out only on match
# 	  code = 1 BLOCK-ON-MATCH: block in->out only on match
#   Note: Empty table (i.e.,size = 0), code--
#       code = 0 blocks all
#       code = 1 passes all
#
# Filter file line editing--
# First char: ' ' = skip
# First char: '#' = comment, skip
# First char: '@' = matrix size (n)
# First char: '%' = in->out table start
#   2nd char: Input connection (0-n)
#   3rd char: Output connection (0-n)
#   4th char: must be ' '
#   5th char: filter table type (0 OR 1)
# First char: 'I' = ascii hex CAN id name copied from CANID_INSERT.sql file
# First char: 'T' = Translate ID: CAN bus side CAN id
# First char: 't' = Translate ID: outside of CAN bus CAN id
#   Note: 'T' and 't' must be in consecutive pairs
# 
#####################
@3 // Connection size (N=3): 3x3 table
#####################
#------------------------------------------------------------------------------------
%11 0 // MUST be NULL
#------------------------------------------------------------------------------------
%12 1 // block-on-match: incoming #1 -> outgoing #2 (listening port -> forwarded port to remote machine)
#   No translation table required
#------------------------------------------------------------------------------------
%13 1 // block-on-match : incoming #1 -> outgoing #3 (listening port -> serial port/ttuUSB)
#   CAN msgs generated by cangate, nc, etc., to go local CAN bus
# ELCON emclocal CAN bus #2 is blocked (but translated if not blocked)
T INSERT INTO CANID VALUES ('CANID_ELCON2_TX','C7FA873C','ELCON1',1,1,'I16_I16_U8_U8_U8_U8','ELCON2 Translated Charger transmit: ');
t INSERT INTO CANID VALUES ('CANID_ELCON_TX','C7FA872C','ELCON ',1,1,'I16_I16_U8_U8_U8_U8','ELCON  CAN BUS Charger transmit: ');
T INSERT INTO CANID VALUES ('CANID_ELCON2_RX','C0372FB4','ELCON1',1,1,'I16_I16_U8_U8_U8_U8','ELCON2 Translated Charger receive: ');
t INSERT INTO CANID VALUES ('CANID_ELCON_RX','C0372FA4','ELCON ',1,1,'I16_I16_U8_U8_U8_U8','ELCON  CAN BUS Charger receive: ');

# DMOC #2 CAN msgs are blocked (but translated if not blocked)
T INSERT INTO CANID VALUES ('CANID_DMOC_ACTUALTORQ','47400000','DMOC',1,1,'I16',       'DMOC: Actual Torque: payload-30000');
t INSERT INTO CANID VALUES ('CANID_DMOC2_ACTUALTORQ','4740001C','DMOC',1,1,'I16',       'DMOC2: Actual Torque: payload-30000');
T INSERT INTO CANID VALUES ('CANID_DMOC_SPEED',     '47600000','DMOC',1,1,'I16_X6',    'DMOC: Actual Speed (rpm?)');
t INSERT INTO CANID VALUES ('CANID_DMOC2_SPEED',     '4760001C','DMOC',1,1,'I16_X6',    'DMOC2: Actual Speed (rpm?)');
T INSERT INTO CANID VALUES ('CANID_DMOC_DQVOLTAMP', '47C00000','DMOC',1,1,'I16_I16_I16_I16','DMOC: D volt:amp, Q volt:amp');
t INSERT INTO CANID VALUES ('CANID_DMOC2_DQVOLTAMP', '47C0001C','DMOC',1,1,'I16_I16_I16_I16','DMOC1: D volt:amp, Q volt:amp');
T INSERT INTO CANID VALUES ('CANID_DMOC_TORQUE',    '05683004','DMOC',1,1,'I16_I16',   'DMOC: Torque,-(Torque-30000)');
t INSERT INTO CANID VALUES ('CANID_DMOC2_TORQUE',    '05683014','DMOC',1,1,'I16_I16',   'DMOC2: Torque,-(Torque-30000)');
T INSERT INTO CANID VALUES ('CANID_DMOC_CRITICAL_F','056837fc','DMOC',1,1,'NONE',      'DMOC: Critical Fault: payload = DEADB0FF');
t INSERT INTO CANID VALUES ('CANID_DMOC2_CRITICAL_F','056838fc','DMOC',1,1,'NONE',      'DMOC2: Critical Fault: payload = DEADB0FF');
T INSERT INTO CANID VALUES ('CANID_DMOC_HV_STATUS', 'CA000000','DMOC',1,1,'I16_I16_X6','DMOC: HV volts:amps, status');
t INSERT INTO CANID VALUES ('CANID_DMOC2_HV_STATUS', 'CA00001C','DMOC',1,1,'I16_I16_X6','DMOC2: HV volts:amps, status');
T INSERT INTO CANID VALUES ('CANID_DMOC_HV_TEMPS',  'CA200000','DMOC',1,1,'U8_U8_U8',  'DMOC: Temperature:rotor,invert,stator');
t INSERT INTO CANID VALUES ('CANID_DMOC2_HV_TEMPS',  'CA20001C','DMOC',1,1,'U8_U8_U8',  'DMOC2: Temperature:rotor,invert,stator');

# DMOC receive commands translated  Unit #2
T INSERT INTO CANID VALUES ('CANID_DMOC_CMD_SPEED',  '46400000','MMC',1,1,'I16_X6',         'DMOC: cmd: speed, key state');
t INSERT INTO CANID VALUES ('CANID_DMOC2_CMD_SPEED', '4640001C','MMC',1,1,'I16_X6',         'DMOC2: cmd: speed, key state');
T INSERT INTO CANID VALUES ('CANID_DMOC_CMD_TORQ',   '46600000','MMC',1,1,'I16_I16_I16_X6', 'DMOC: cmd: torq,copy,standby,status');
t INSERT INTO CANID VALUES ('CANID_DMOC2_CMD_TORQ',  '4660001C','MMC',1,1,'I16_I16_I16_X6', 'DMOC2: cmd: torq,copy,standby,status');
T INSERT INTO CANID VALUES ('CANID_DMOC_CMD_REGEN',  '46800000','MMC',1,1,'I16_I16_X_U8_U8','DMOC: cmd: watt,accel,degC,alive');
t INSERT INTO CANID VALUES ('CANID_DMOC2_CMD_REGEN', '4680001C','MMC',1,1,'I16_I16_X_U8_U8','DMOC2: cmd: watt,accel,degC,alive');

# If these are coming from another CAN bus block them
INSERT INTO CANID VALUES ('CANID_HB_TIMESYNC',       '00400000','TIMESYNC',1,1,'U8'   ,'GPS_1: GPS time sync distribution msg');
INSERT INTO CANID VALUES ('CANID_HB_TIMESYNC_2',     '00600000','TIMESYNC',1,2,'U8'   ,'GPS_2: GPS time sync distribution msg');
INSERT INTO CANID VALUES ('CANID_UNIT_1A','03600000','UNIT_1A',1,1,'U8','Logger2: sensor board w ublox gps & SD card');
INSERT INTO CANID VALUES ('CANID_CMD_PWRBOX1R'   ,'E3200000','PWRBOX',1,1,'U8_U32','Pwrbox1: R Command CANID');
INSERT INTO CANID VALUES ('CANID_HB_PWRBOX1'     ,'FF200000','PWRBOX',1,2,'U8_FF', 'Pwrbox1: Polled msg');
INSERT INTO CANID VALUES ('CANID_ALM_PWRBOX1'    ,'00800000','PWRBOX',1,3,'U8',    'Pwrbox1: Input voltage low alarm msg');
INSERT INTO CANID VALUES ('CANID_LVL_HB_PWRBOX1' ,'FF400000','PWRBOX',1,4,'U8_FF', 'Pwrbox1: Heartbeat: level wind motor current');
INSERT INTO CANID VALUES ('CANID_LVL_MSG_PWRBOX1','E3400000','PWRBOX',1,5,'U8_FF', 'Pwrbox1: Msg: level wind motor current');

#------------------------------------------------------------------------------------
%21 1 // block: incoming #2 -> outgoing #1 (forwarded port -> listening port)
#------------------------------------------------------------------------------------
%22 0 // MUST be NULL
#------------------------------------------------------------------------------------
%23 1 // block-on-match : incoming #2 -> outgoing #3 (forwarded port -> serial port/ttuUSB
#   CAN msgs generated by cangate, nc, etc., to go local CAN bus
# ELCON emclocal CAN bus #2 is blocked (but translated if not blocked)

# DMOC #2 T t CAN msgs are translated
T INSERT INTO CANID VALUES ('CANID_DMOC2_ACTUALTORQ','4740001C','DMOC',1,1,'I16',       'DMOC2: Actual Torque: payload-30000');
t INSERT INTO CANID VALUES ('CANID_DMOC_ACTUALTORQ','47400000','DMOC',1,1,'I16',       'DMOC: Actual Torque: payload-30000');
T INSERT INTO CANID VALUES ('CANID_DMOC2_SPEED',     '4760001C','DMOC',1,1,'I16_X6',    'DMOC2: Actual Speed (rpm?)');
t INSERT INTO CANID VALUES ('CANID_DMOC_SPEED',     '47600000','DMOC',1,1,'I16_X6',    'DMOC: Actual Speed (rpm?)');
T INSERT INTO CANID VALUES ('CANID_DMOC2_DQVOLTAMP', '47C0001C','DMOC',1,1,'I16_I16_I16_I16','DMOC1: D volt:amp, Q volt:amp');
t INSERT INTO CANID VALUES ('CANID_DMOC_DQVOLTAMP', '47C00000','DMOC',1,1,'I16_I16_I16_I16','DMOC: D volt:amp, Q volt:amp');
T INSERT INTO CANID VALUES ('CANID_DMOC2_TORQUE',    '05683014','DMOC',1,1,'I16_I16',   'DMOC2: Torque,-(Torque-30000)');
t INSERT INTO CANID VALUES ('CANID_DMOC_TORQUE',    '05683004','DMOC',1,1,'I16_I16',   'DMOC: Torque,-(Torque-30000)');
T INSERT INTO CANID VALUES ('CANID_DMOC2_CRITICAL_F','056838fc','DMOC',1,1,'NONE',      'DMOC2: Critical Fault: payload = DEADB0FF');
t INSERT INTO CANID VALUES ('CANID_DMOC_CRITICAL_F','056837fc','DMOC',1,1,'NONE',      'DMOC: Critical Fault: payload = DEADB0FF');
T INSERT INTO CANID VALUES ('CANID_DMOC2_HV_STATUS', 'CA00001C','DMOC',1,1,'I16_I16_X6','DMOC2: HV volts:amps, status');
t INSERT INTO CANID VALUES ('CANID_DMOC_HV_STATUS', 'CA000000','DMOC',1,1,'I16_I16_X6','DMOC: HV volts:amps, status');
T INSERT INTO CANID VALUES ('CANID_DMOC2_HV_TEMPS',  'CA20001C','DMOC',1,1,'U8_U8_U8',  'DMOC2: Temperature:rotor,invert,stator');
t INSERT INTO CANID VALUES ('CANID_DMOC_HV_TEMPS',  'CA200000','DMOC',1,1,'U8_U8_U8',  'DMOC: Temperature:rotor,invert,stator');

# If these are coming from another CAN bus, so block them
INSERT INTO CANID VALUES ('CANID_HB_TIMESYNC',       '00400000','TIMESYNC',1,1,'U8'   ,'GPS_1: GPS time sync distribution msg');
INSERT INTO CANID VALUES ('CANID_HB_TIMESYNC_2',     '00600000','TIMESYNC',1,2,'U8'   ,'GPS_2: GPS time sync distribution msg');
INSERT INTO CANID VALUES ('CANID_UNIT_1A','03600000','UNIT_1A',1,1,'U8','Logger2: sensor board w ublox gps & SD card');
INSERT INTO CANID VALUES ('CANID_CMD_PWRBOX1R'   ,'E3200000','PWRBOX',1,1,'U8_U32','Pwrbox1: R Command CANID');
INSERT INTO CANID VALUES ('CANID_HB_PWRBOX1'     ,'FF200000','PWRBOX',1,2,'U8_FF', 'Pwrbox1: Polled msg');
INSERT INTO CANID VALUES ('CANID_ALM_PWRBOX1'    ,'00800000','PWRBOX',1,3,'U8',    'Pwrbox1: Input voltage low alarm msg');
INSERT INTO CANID VALUES ('CANID_LVL_HB_PWRBOX1' ,'FF400000','PWRBOX',1,4,'U8_FF', 'Pwrbox1: Heartbeat: level wind motor current');
INSERT INTO CANID VALUES ('CANID_LVL_MSG_PWRBOX1','E3400000','PWRBOX',1,5,'U8_FF', 'Pwrbox1: Msg: level wind motor current');

T INSERT INTO CANID VALUES ('CANID_ELCON2_TX','C7FA873C','ELCON1',1,1,'I16_I16_U8_U8_U8_U8','ELCON2 Translated Charger transmit: ');
t INSERT INTO CANID VALUES ('CANID_ELCON_TX','C7FA872C','ELCON ',1,1,'I16_I16_U8_U8_U8_U8','ELCON  CAN BUS Charger transmit: ');
T INSERT INTO CANID VALUES ('CANID_ELCON2_RX','C0372FB4','ELCON1',1,1,'I16_I16_U8_U8_U8_U8','ELCON2 Translated Charger receive: ');
t INSERT INTO CANID VALUES ('CANID_ELCON_RX','C0372FA4','ELCON ',1,1,'I16_I16_U8_U8_U8_U8','ELCON  CAN BUS Charger receive: ');

# DMOC receive commands translated  Unit #2
T INSERT INTO CANID VALUES ('CANID_DMOC2_CMD_SPEED', '4640001C','MMC',1,1,'I16_X6',         'DMOC2: cmd: speed, key state');
t INSERT INTO CANID VALUES ('CANID_DMOC_CMD_SPEED',  '46400000','MMC',1,1,'I16_X6',         'DMOC: cmd: speed, key state');
T INSERT INTO CANID VALUES ('CANID_DMOC2_CMD_TORQ',  '4660001C','MMC',1,1,'I16_I16_I16_X6', 'DMOC2: cmd: torq,copy,standby,status');
t INSERT INTO CANID VALUES ('CANID_DMOC_CMD_TORQ',   '46600000','MMC',1,1,'I16_I16_I16_X6', 'DMOC: cmd: torq,copy,standby,status');
T INSERT INTO CANID VALUES ('CANID_DMOC2_CMD_REGEN', '4680001C','MMC',1,1,'I16_I16_X_U8_U8','DMOC2: cmd: watt,accel,degC,alive');
t INSERT INTO CANID VALUES ('CANID_DMOC_CMD_REGEN',  '46800000','MMC',1,1,'I16_I16_X_U8_U8','DMOC: cmd: watt,accel,degC,alive');

#------------------------------------------------------------------------------------
%31 1 // block: incoming #3 -> outgoing #1 (serial port/ttuUSB -> listening port)
# Pass all to listening port (for things such as cangate, logging, etc.)
#------------------------------------------------------------------------------------
%32 0 // pass:incoming #3 -> outgoing #2 (serial port/ttuUSB -> forwarded port to remote machine)
INSERT INTO CANID VALUES ('CANID_HB_TIMESYNC_2',     '00600000','TIMESYNC',1,2,'U8'   ,'GPS_2: GPS time sync distribution msg');
INSERT INTO CANID VALUES ('CANID_HB_TIMESYNC',       '00400000','TIMESYNC',1,1,'U8'   ,'GPS_1: GPS time sync distribution msg');
#------------------------------------------------------------------------------------
%33 0 // MUST be NULL
#------------------------------------------------------------------------------------
%99 0 // END OF TABLE (just for a check)
#------------------------------------------------------------------------------------

## Notes:
# 1. This scheme does not automatically update chantges of the CANID_INSERT.sql file, but
#    as long as the CAN ID assignment does not change, changes to the .sql are OK.
#
# 2. For the STM32 emc-master bridging the contemplated process would be:
#    - Separate program runs the code for read:edit:load (same for all usages)
#    - Additionally, converts binary loaded tables to 'C' code which is included in the compilation.
#      (Since there is not file reading capability for the STM32)
#
# 3. Table MUST be in Row Column order (with 'matrix trace' entry included, but empty)
#
    
